#!/usr/bin/env node

'use strict';
require('dotenv').load();

var app = require('../app');
var debug = require('debug')('saml-login-app:server');
const http = require('http');
const logger = require('../lib/logger');

function normalizePort(val) {
    var tempport = parseInt(val, 10);

    if (isNaN(tempport)) {
        return val;
    }

    if (tempport >= 0) {
        return tempport;
    }

    return false;
}

var port = normalizePort(process.env.SERVER_PORT || '3000');
app.set('port', port);

var server = http.createServer(app);


function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string' ?
        'Pipe ' + port :
        'Port ' + port;

    switch (error.code) {
        case 'EACCES':
            logger.error(bind + ' requires elevated privileges');
            throw new Error(bind + ' requires elevated privileges');
        case 'EADDRINUSE':
            logger.error(bind + ' is already in use');
            throw new Error(bind + ' is already in use');
        default:
            throw error;
    }
}

function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string' ?
        'pipe ' + addr :
        'port ' + addr.port;
    logger.info('Listening on ' + bind);
}

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);
